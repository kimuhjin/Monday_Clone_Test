{"version":3,"sources":["Components/LoginPage.js","Reducers/Login.js","Components/BoardComponents/MainTable.js","Components/BoardComponents/WorkLoad.js","Components/BoardComponents/Kanban.js","Components/BoardComponents/Chart.js","Components/ViewRoute.js","Components/DashBoard.js","Components/MainPage.js","App.js","serviceWorker.js","Reducers/index.js","index.js"],"names":["LoginPage","dispatch","useDispatch","history","useHistory","useState","Id","setId","MainContainer","LoginBox","LoginTitle","Input","placeholder","value","onChange","e","target","Button","onClick","user","type","Login","window","sessionStorage","setItem","push","styled","div","input","MainTable","Container","WorkLoad","Kanban","Chart","ViewRoute","Views","DashBoard","OpenBoardPicker","setOpenBoardPicker","setViews","BoardTitleValue","setBoardTitleValue","BoardDiscValue","setBoardDiscValue","console","log","ClickOption","LeftPanel","MainBoard","RightPanel","BoardHeader","BoardTitle","BoardDisc","BoardFunc","BoardSwitch","size","style","marginRight","SwitchTitle","marginLeft","BoardPicker","PickerTitle","PickerInput","PickerOptions","PickerOption","TargetValue","to","ViewRouteWraaper","button","props","keyframes","MainPage","useSelector","state","LoginUser","UserId","getItem","OpenDisc","setOpenDisc","OpenUserMenu","setOpenUserMenu","LeftBar","LeftBarTop","Logo","CircleWraaper","CircleHover","onMouseEnter","onMouseLeave","BellIcon","IconDisc","DownloadIcon","LeftBarBottom","UserIconHover","UserIcon","UserInfoBox","UserName","BoxMove","FaUserAlt","FaRegBell","BsDownload","App","basename","process","exact","path","component","Boolean","location","hostname","match","rootReducer","combineReducers","action","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.300556a2.chunk.js","sourcesContent":["import React, { Fragment, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Login } from \"../Reducers/Login\";\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const LoginFunc = (user) => dispatch(Login(user));\n  const [Id, setId] = useState(\"\");\n  const LoginOnClick = () => {\n    LoginFunc(Id);\n    window.sessionStorage.setItem(\"UserId\", Id);\n    history.push(\"/MainPage\");\n  };\n  return (\n    <Fragment>\n      <MainContainer>\n        <LoginBox>\n          <LoginTitle>로그인</LoginTitle>\n          <Input\n            placeholder=\"유저 이름을 입력하세요\"\n            value={Id}\n            onChange={(e) => setId(e.target.value)}\n          />\n          <Button onClick={LoginOnClick}>로그인</Button>\n        </LoginBox>\n      </MainContainer>\n    </Fragment>\n  );\n}\n\nexport default LoginPage;\nconst Button = styled.div`\n  cursor: pointer;\n  outline: none;\n  width: 80px;\n  height: 40px;\n  border-radius: 5px;\n  display: flex;\n  color: #fff;\n  background-color: #0d91ca;\n  font-weight: bold;\n  justify-content: center;\n  align-items: center;\n`;\nconst Input = styled.input`\n  outline: none;\n  width: 200px;\n  height: 35px;\n  border: 1px solid #f2f2f2;\n  border-radius: 5px;\n  font-size: 16px;\n  text-align: center;\n  box-sizing: border-box;\n  &::placeholder {\n    font-size: 14px;\n    text-align: center;\n    color: lightgray;\n  }\n`;\nconst LoginTitle = styled.div`\n  font-size: 24px;\n  font-weight: 800;\n  color: black;\n`;\nconst LoginBox = styled.div`\n  padding: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  height: 300px;\n  border: 1px solid #f2f2f2;\n  border-radius: 5px;\n`;\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1080px;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n`;\n","const LOGIN = \"LOGIN\";\nexport const Login = (user) => ({ type: LOGIN, user });\nconst initialState = \"\";\nexport default function LoginUser(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN: {\n      let state = action.user;\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nfunction MainTable() {\n  return (\n    <Fragment>\n      <Container>메인 테이블</Container>\n    </Fragment>\n  );\n}\n\nexport default MainTable;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 25px;\n  box-sizing: border-box;\n`;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nfunction WorkLoad() {\n  return (\n    <Fragment>\n      <Container>작업량</Container>\n    </Fragment>\n  );\n}\n\nexport default WorkLoad;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 25px;\n  box-sizing: border-box;\n`;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nfunction Kanban() {\n  return (\n    <Fragment>\n      <Container>칸반</Container>\n    </Fragment>\n  );\n}\n\nexport default Kanban;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 25px;\n  box-sizing: border-box;\n`;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nfunction Chart() {\n  return (\n    <Fragment>\n      <Container>칸반</Container>\n    </Fragment>\n  );\n}\n\nexport default Chart;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 25px;\n  box-sizing: border-box;\n`;\n","import React, { Fragment } from \"react\";\nimport MainTable from \"./BoardComponents/MainTable\";\nimport WorkLoad from \"./BoardComponents/WorkLoad\";\nimport Kanban from \"./BoardComponents/Kanban\";\nimport Chart from \"./BoardComponents/Chart\";\n\nfunction ViewRoute({ Views }) {\n  return (\n    <Fragment>\n      {Views === \"메인 테이블\" && <MainTable />}\n      {Views === \"작업량\" && <WorkLoad />}\n      {Views === \"차트\" && <Chart />}\n      {Views === \"칸반\" && <Kanban />}\n    </Fragment>\n  );\n}\n\nexport default ViewRoute;\n","import React, { Fragment, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { BsTable } from \"react-icons/bs\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { FiPieChart } from \"react-icons/fi\";\nimport { BsKanban } from \"react-icons/bs\";\nimport { FaRegListAlt } from \"react-icons/fa\";\n\nimport ViewRoute from \"./ViewRoute\";\nfunction DashBoard() {\n  const [OpenBoardPicker, setOpenBoardPicker] = useState(false);\n  const [Views, setViews] = useState(\"메인 테이블\");\n  const [BoardTitleValue, setBoardTitleValue] = useState(\"빈 보드\");\n  const [BoardDiscValue, setBoardDiscValue] = useState(\n    \"보드 설명을 추가하세요\"\n  );\n  console.log(Views);\n  const ClickOption = (e) => {\n    setViews(e.target.value);\n    setOpenBoardPicker(false);\n  };\n\n  return (\n    <Fragment>\n      <LeftPanel></LeftPanel>\n      <MainBoard>\n        <RightPanel>\n          <BoardHeader>\n            <BoardTitle\n              value={BoardTitleValue}\n              onChange={(e) => setBoardTitleValue(e.target.value)}\n            ></BoardTitle>\n\n            <BoardDisc\n              value={BoardDiscValue}\n              onChange={(e) => setBoardDiscValue(e.target.value)}\n            ></BoardDisc>\n\n            <BoardFunc>\n              <BoardSwitch onClick={() => setOpenBoardPicker(!OpenBoardPicker)}>\n                <BsTable size={18} style={{ marginRight: \"12px\" }} />\n                <SwitchTitle>{Views}</SwitchTitle>\n                <MdKeyboardArrowDown size={18} style={{ marginLeft: \"6px\" }} />\n              </BoardSwitch>\n              {OpenBoardPicker && (\n                <BoardPicker>\n                  <PickerTitle>모든 보기</PickerTitle>\n                  <PickerInput placeholder=\"검색 보기\"></PickerInput>\n                  <PickerOptions>\n                    <PickerOption\n                      TargetValue={Views}\n                      value=\"메인 테이블\"\n                      onClick={ClickOption}\n                    >\n                      <BsTable size={15} style={{ marginRight: \"7px\" }} />\n                      메인 테이블\n                    </PickerOption>\n                    <PickerOption\n                      TargetValue={Views}\n                      value=\"차트\"\n                      onClick={ClickOption}\n                    >\n                      <FiPieChart size={15} style={{ marginRight: \"7px\" }} />\n                      차트\n                    </PickerOption>\n                    <PickerOption\n                      TargetValue={Views}\n                      value=\"작업량\"\n                      onClick={ClickOption}\n                      to={\"/WorkLoad\"}\n                    >\n                      <FaRegListAlt size={15} style={{ marginRight: \"7px\" }} />\n                      작업량\n                    </PickerOption>\n\n                    <PickerOption\n                      TargetValue={Views}\n                      value=\"칸반\"\n                      onClick={ClickOption}\n                    >\n                      <BsKanban size={15} style={{ marginRight: \"7px\" }} />\n                      칸반\n                    </PickerOption>\n                  </PickerOptions>\n                </BoardPicker>\n              )}\n            </BoardFunc>\n          </BoardHeader>\n          {/* Board선택 라우트 */}\n          <ViewRouteWraaper>\n            <ViewRoute Views={Views} />\n          </ViewRouteWraaper>\n        </RightPanel>\n      </MainBoard>\n    </Fragment>\n  );\n}\n\nexport default DashBoard;\nconst BoxMove = () => keyframes`\nfrom{\n    transform:translateY(-20px);\n}\nto {\n    transform:translateY(0px);\n}\n`;\nconst BoardDisc = styled.input`\n  outline: none;\n  height: 25px;\n  max-width: 684px;\n  font-size: 14px;\n  color: #323338;\n  border: none;\n  padding: 0px 5px;\n  box-sizing: border-box;\n  width: 100%;\n  font-weight: 300;\n  border: 1px dashed transparent;\n  &:hover {\n    border: 1px dashed #d8d8d8;\n  }\n`;\n\nconst ViewRouteWraaper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst PickerOption = styled.button`\n  outline: none;\n  cursor: pointer;\n  height: 36px;\n  border: none;\n  width: 100%;\n  text-decoration: none;\n  padding: 0px 8px;\n  box-sizing: border-box;\n  background-color: ${(props) =>\n    props.TargetValue === props.value ? \"#d9f0ff\" : \"white\"};\n  border-radius: 4px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: 14px;\n  color: ${(props) =>\n    props.TargetValue === props.value ? \"#0085ff\" : \"black\"};\n  &:hover {\n    background-color: ${(props) =>\n      props.TargetValue === props.value ? \"#d9f0ff\" : \"#0085ff\"};\n    color: ${(props) =>\n      props.TargetValue === props.value ? \"#0085ff\" : \"white\"};\n  }\n`;\nconst PickerOptions = styled.div`\n  padding: 8px 0px;\n  box-sizing: border-box;\n`;\nconst PickerInput = styled.input`\n  outline: none;\n  height: 37px;\n  width: 100%;\n  border-radius: 3px;\n  padding: 3px 6px;\n  color: #d8d8d8;\n  font-weight: 300;\n  box-sizing: border-box;\n  border: 1px solid #d8d8d8;\n  &:hover {\n    color: #d8d8d8;\n    font-weight: 300;\n  }\n`;\nconst PickerTitle = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  color: #323338;\n  font-weight: 300;\n  height: 40px;\n  width: 100%;\n  font-size: 14px;\n  margin-left: 5px;\n`;\nconst BoardPicker = styled.div`\n  position: absolute;\n  top: 63px;\n  left: 0;\n  z-index: 999;\n  width: 300px;\n  height: 325px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 0px 4px 17px 6px rgba(0, 0, 0, 0.1);\n  animation: ${BoxMove} 0.3s backwards;\n`;\nconst SwitchTitle = styled.div`\n  margin-top: 2px;\n`;\nconst BoardSwitch = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #323338;\n  &:hover {\n    color: #0085ff;\n  }\n`;\nconst BoardFunc = styled.div`\n  position: relative;\n  height: 55px;\n  padding: 8px 4px;\n  margin-top: 8px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst BoardTitle = styled.input`\n  outline: none;\n  height: 47px;\n  margin-right: 8px;\n  font-size: 28px;\n  color: #323338;\n  border: none;\n  box-sizing: border-box;\n  font-weight: 600;\n  border: 1px dashed transparent;\n  &:hover {\n    border: 1px dashed #d8d8d8;\n  }\n  &::placeholder {\n    color: #323338;\n    font-size: 28px;\n    font-weight: 600;\n  }\n`;\nconst BoardHeader = styled.div`\n  width: 100%;\n  min-height: 165px;\n  padding: 30px 30px 0px 30px;\n  box-sizing: border-box;\n  border-bottom: 1px solid #c4c7d0;\n  display: flex;\n  flex-direction: column;\n`;\nconst RightPanel = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nconst LeftPanel = styled.div`\n  border-top-left-radius: 12px;\n  border-bottom-left-radius: 12px;\n  width: 30px;\n  height: 100%;\n  background-color: white;\n  border-right: 1px solid #c4c7d0;\n`;\n\nconst MainBoard = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  background-color: white;\n\n  overflow: scroll;\n`;\n","import React, { Fragment, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n// import LoginUser from \"../Reducers/Login\";\nimport { FaRegBell } from \"react-icons/fa\";\nimport { BsDownload } from \"react-icons/bs\";\n\nimport { FaUserAlt } from \"react-icons/fa\";\nimport DashBoard from \"./DashBoard\";\nfunction MainPage() {\n  const User = useSelector((state) => state.LoginUser);\n  const UserId = window.sessionStorage.getItem(\"UserId\");\n\n  const [OpenDisc, setOpenDisc] = useState(\"\");\n  const [OpenUserMenu, setOpenUserMenu] = useState(false);\n  return (\n    <Fragment>\n      <MainContainer>\n        <LeftBar>\n          <LeftBarTop>\n            <Logo />\n            <CircleWraaper>\n              <CircleHover\n                onMouseEnter={(e) => setOpenDisc(\"알림\")}\n                onMouseLeave={(e) => setOpenDisc(\"\")}\n              >\n                <BellIcon />\n              </CircleHover>\n              {OpenDisc === \"알림\" && <IconDisc>알림</IconDisc>}\n            </CircleWraaper>\n            <CircleWraaper>\n              <CircleHover\n                onMouseEnter={(e) => setOpenDisc(\"받은편지함\")}\n                onMouseLeave={(e) => setOpenDisc(\"\")}\n              >\n                <DownloadIcon />\n              </CircleHover>\n              {OpenDisc === \"받은편지함\" && <IconDisc>받은편지함</IconDisc>}\n            </CircleWraaper>\n          </LeftBarTop>\n          <LeftBarBottom>\n            <CircleWraaper>\n              <UserIconHover onClick={() => setOpenUserMenu(!OpenUserMenu)}>\n                <UserIcon />\n              </UserIconHover>\n              {OpenUserMenu && (\n                <UserInfoBox>\n                  <UserName>{UserId}</UserName>\n                </UserInfoBox>\n              )}\n            </CircleWraaper>\n          </LeftBarBottom>\n        </LeftBar>\n\n        <DashBoard />\n      </MainContainer>\n    </Fragment>\n  );\n}\n\nexport default MainPage;\nconst BoxMove = () => keyframes`\nfrom{\n    transform:translateX(-10px);\n    opacity:0;\n}\nto {\n    transform:translateX(0px);\n    opacity:1;\n}\n`;\nconst UserName = styled.div`\n  width: 100%;\n  height: 54px;\n  padding: 12px 16px;\n  box-sizing: border-box;\n  font-size: 14px;\n  color: #323338;\n`;\nconst UserInfoBox = styled.div`\n  position: absolute;\n  width: 480px;\n  border-radius: 8px;\n  height: 200px;\n  box-shadow: 0 4px 17px 6px rgba(0, 0, 0, 0.1);\n  background-color: white;\n  bottom: 0;\n  z-index: 9999;\n  left: 48px;\n  animation: ${BoxMove} 0.5s backwards;\n`;\nconst UserIcon = styled(FaUserAlt)`\n  width: 24px;\n  height: 24px;\n  color: white;\n  pointer-events: none;\n`;\nconst BellIcon = styled(FaRegBell)`\n  width: 24px;\n  height: 24px;\n  color: white;\n  pointer-events: none;\n`;\nconst DownloadIcon = styled(BsDownload)`\n  width: 24px;\n  height: 24px;\n  color: white;\n  pointer-events: none;\n`;\n\nconst CircleWraaper = styled.div`\n  position: relative;\n  outline: none;\n`;\nconst IconDisc = styled.div`\n  white-space: nowrap;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: bold;\n  font-size: 14px;\n  position: absolute;\n  background-color: #5b607a;\n  bottom: 0;\n  left: 48px;\n  border-radius: 3px;\n  z-index: 9999;\n  /* min-width: 100%; */\n  height: 43px;\n  padding: 16px;\n  box-sizing: border-box;\n  animation: ${BoxMove} 0.5s backwards;\n`;\nconst LeftBarTop = styled.div``;\nconst LeftBarBottom = styled.div`\n  padding: 15px 0px;\n`;\nconst UserIconHover = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 5px 0px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #00000099;\n  border: 2px solid #fff;\n  transition: 0.1s linear;\n  &:hover {\n    transform: scale(0.9);\n  }\n`;\nconst CircleHover = styled.button`\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 5px 0px;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: none;\n  background-color: transparent;\n  &:hover {\n    background-color: #00000099;\n  }\n`;\nconst LeftBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  width: 66px;\n  height: 100%;\n  background-color: #292f4c;\n`;\nconst Logo = styled.div`\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  background-image: url(\"https://cdn7.monday.com/images/logos/monday_logo_icon.png\");\n  background-size: 100% auto;\n  background-position: center;\n  background-position: no-repeat;\n  margin: 15px 0px;\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #292f4c;\n`;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./Components/LoginPage\";\nimport MainPage from \"./Components/MainPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/MainPage\" component={MainPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport LoginUser from \"./Login\";\n\nconst rootReducer = combineReducers({\n  LoginUser,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Reducer from \"./Reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}